{"file":"callout-aside-helpers.js","mappings":"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","names":[],"sources":["src/utils/components/callout-aside/callout-aside.interface.ts","src/utils/components/callout-aside/callout-aside-helpers.tsx"],"sourcesContent":["import { Base } from '../../common/common.interface';\n\nexport const HeadingLevel = ['h2', 'h3', 'h4', 'h5', 'h6'] as const;\n\nexport type HeadingLevelOptions = (typeof HeadingLevel)[number];\n\nexport const HighlightColours = ['teal', 'gold', 'yellow', 'taupe', 'green', 'lime', 'sky', 'blue', 'purple'] as const;\n\nexport type HighlightColourOptions = (typeof HighlightColours)[number];\n\nexport type CalloutAsideType = 'callout' | 'aside';\n\nexport type HeadingContentType = 'string' | 'html';\n\nexport const HeadingContentTypes = ['string', 'html'] as const;\n\nexport interface CalloutAside extends Base {\n\t/**\n\t * The heading level of the callout/aside heading.\n\t */\n\theadingType: HeadingLevelOptions;\n\n\t/**\n\t * The type of the heading content. If no prop is passed, it will default to string.\n\t */\n\theadingContentType: HeadingContentType;\n\n\t/**\n\t * Text or HTML to be displayed as the heading of the callout/aside. If the heading content should be displayed as HTML, the `headingContentType` needs to be set to `html`.\n\t */\n\theadingContent: string;\n\n\t/**\n\t * Optional text to be displayed as the content for the callout/aside component. If a string is passed, it will automatically be nested in a paragraph tag.\n\t *\n\t * HTML content can also be passed as the child/children of the callout/aside component if additional/different elements for the content are needed.\n\t */\n\tcontent?: string | HTMLElement;\n\n\t/**\n\t * Optional prop to choose the border colour of the callout/aside. If none is passed, the default colour will be teal.\n\t */\n\thighlightColor?: HighlightColourOptions | undefined;\n}\n","import { h } from '@stencil/core';\nimport {\n\tCalloutAsideType,\n\tHeadingLevel,\n\tHeadingLevelOptions,\n\tHeadingContentType,\n\tHighlightColours,\n\tHighlightColourOptions,\n} from './callout-aside.interface';\n\nexport const isValidHighlightColour = (colour: HighlightColourOptions): colour is HighlightColourOptions =>\n\tHighlightColours.includes(colour);\n\nexport const isValidHeadingLevel = (level: HeadingLevelOptions): level is HeadingLevelOptions =>\n\tHeadingLevel.includes(level);\n\nconst generateClasses = (type: CalloutAsideType, highlightColor?: HighlightColourOptions) => {\n\tconst componentType = type === 'callout' ? `ontario-callout` : `ontario-aside`;\n\tconst borderColor = `ontario-border-highlight--${highlightColor}`;\n\n\treturn highlightColor ? `${componentType} ${borderColor}` : `${componentType}`;\n};\n\nconst generateHeading = (\n\ttype: CalloutAsideType,\n\theadingType: HeadingLevelOptions,\n\theadingContentType: HeadingContentType,\n\theadingContent: string,\n) => {\n\tconst headingContentIsHTML = headingContentType === 'html';\n\n\tswitch (headingType) {\n\t\tcase 'h2':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h2>\n\t\t\t) : (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h2>\n\t\t\t);\n\t\tcase 'h3':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h3 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h3>\n\t\t\t) : (\n\t\t\t\t<h3 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h3>\n\t\t\t);\n\t\tcase 'h4':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h4 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h4>\n\t\t\t) : (\n\t\t\t\t<h4 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h4>\n\t\t\t);\n\t\tcase 'h5':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h5 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h5>\n\t\t\t) : (\n\t\t\t\t<h5 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h5>\n\t\t\t);\n\t\tcase 'h6':\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h6 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h6>\n\t\t\t) : (\n\t\t\t\t<h6 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h6>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn headingContentIsHTML ? (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`} innerHTML={headingContent}></h2>\n\t\t\t) : (\n\t\t\t\t<h2 class={`ontario-${type}__title ontario-h5`}>{headingContent}</h2>\n\t\t\t);\n\t}\n};\n\nexport const generateCalloutAside = (\n\ttype: CalloutAsideType,\n\theadingType: HeadingLevelOptions,\n\theadingContentType: HeadingContentType,\n\theadingContent: string,\n\tcontent?: string | HTMLElement,\n\thighlightColour?: HighlightColourOptions,\n) => {\n\tconst contentIsString = typeof content === 'string';\n\n\treturn type === 'callout' ? (\n\t\t<div class={generateClasses(type, highlightColour)}>\n\t\t\t{generateHeading(type, headingType, headingContentType, headingContent)}\n\t\t\t{contentIsString ? <p>{content}</p> : <slot />}\n\t\t</div>\n\t) : (\n\t\t<aside class={generateClasses(type, highlightColour)}>\n\t\t\t{generateHeading(type, headingType, headingContentType, headingContent)}\n\t\t\t{contentIsString ? <p>{content}</p> : <slot />}\n\t\t</aside>\n\t);\n};\n"],"version":3}