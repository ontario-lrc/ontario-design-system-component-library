{"version":3,"file":"ontario-language-toggle.e2e.js","sourceRoot":"","sources":["../../../../src/components/ontario-language-toggle/test/ontario-language-toggle.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('ontario-language-toggle', () => {\n\tit('renders', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent('<ontario-language-toggle></ontario-language-toggle>');\n\n\t\tconst element = await page.find('ontario-language-toggle');\n\t\texpect(element).toHaveClass('hydrated');\n\t});\n\n\tit('should render the small language toggler class when the size property is set to `small`', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent('<ontario-language-toggle size=\"small\"></ontario-language-toggle>');\n\n\t\tconst toggler = await page.find('ontario-language-toggle >>> a');\n\t\texpect(toggler).toHaveClasses(['ontario-language-toggler', 'ontario-language-toggler--small']);\n\t});\n\n\tit('should render the default language toggler class when the size property is set to `default`', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent('<ontario-language-toggle size=\"default\"></ontario-language-toggle>');\n\n\t\tconst toggler = await page.find('ontario-language-toggle >>> a');\n\t\texpect(toggler).toHaveClasses(['ontario-language-toggler', 'ontario-language-toggler--default']);\n\t});\n\n\tit('renders changes to the language property', async () => {\n\t\tlet page = await newE2EPage();\n\t\tawait page.setContent('<ontario-language-toggle></ontario-language-toggle>');\n\t\tlet component = await page.find('ontario-language-toggle');\n\t\tlet element = await page.find('ontario-language-toggle >>> a');\n\n\t\tcomponent.setProperty('language', 'fr');\n\t\tawait page.waitForChanges();\n\n\t\texpect(element.textContent).toEqual('ENEnglish');\n\t});\n\n\tit('should toggle the language when clicked', async () => {\n\t\tlet page = await newE2EPage();\n\t\tawait page.setContent('<ontario-language-toggle></ontario-language-toggle>');\n\t\tlet component = await page.find('ontario-language-toggle');\n\n\t\t// Test the initial state\n\t\tconst initialLanguagePromise = component.getProperty('language');\n\t\tconst initialLanguage = await initialLanguagePromise;\n\t\texpect(initialLanguage).toBe('en');\n\n\t\t// Click on the toggle button\n\t\tawait component.click();\n\n\t\t// Wait for the toggle event to propagate\n\t\tawait page.waitForChanges();\n\n\t\t// Test the toggled state\n\t\tconst toggledLanguagePromise = component.getProperty('language');\n\t\tconst toggledLanguage = await toggledLanguagePromise;\n\t\texpect(toggledLanguage).toBe('fr');\n\t});\n\n\tdescribe('events/methods', () => {\n\t\tit('fires the headerLanguageToggled event when clicked', async () => {\n\t\t\tlet page = await newE2EPage();\n\t\t\tawait page.setContent('<ontario-language-toggle></ontario-language-toggle>');\n\t\t\tlet component = await page.find('ontario-language-toggle');\n\n\t\t\tconst clickEvent = await page.spyOnEvent('headerLanguageToggled');\n\t\t\tcomponent.click();\n\t\t\tawait page.waitForChanges();\n\n\t\t\texpect(clickEvent).toHaveReceivedEventTimes(1);\n\t\t});\n\t});\n});\n"]}