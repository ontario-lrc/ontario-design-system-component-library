{"version":3,"file":"ontario-language-toggle.spec.js","sourceRoot":"","sources":["../../../../src/components/ontario-language-toggle/test/ontario-language-toggle.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AAEnE,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;IACxC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;gBAC9B,UAAU,EAAE,CAAC,qBAAqB,CAAC;gBACnC,IAAI,EAAE,qDAAqD;aAC3D,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE,KAAK,IAAI,EAAE;QACpF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,qBAAqB,CAAC;YACnC,IAAI,EAAE,qDAAqD;SAC3D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;GAa7B,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2EAA2E,EAAE,KAAK,IAAI,EAAE;QAC1F,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,qBAAqB,CAAC;YACnC,IAAI,EAAE,qDAAqD;SAC3D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qGAAqG,EAAE,KAAK,IAAI,EAAE;QACpH,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,qBAAqB,CAAC;YACnC,IAAI,EAAE,0FAA0F;SAChG,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;GAU7B,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { OntarioLanguageToggle } from '../ontario-language-toggle';\n\ndescribe('ontario-language-toggle', () => {\n\tdescribe('snapshot', () => {\n\t\tit('should render the expected html', async () => {\n\t\t\tconst page = await newSpecPage({\n\t\t\t\tcomponents: [OntarioLanguageToggle],\n\t\t\t\thtml: `<ontario-language-toggle></ontario-language-toggle>`,\n\t\t\t});\n\n\t\t\texpect(page.root).toMatchSnapshot();\n\t\t});\n\t});\n\n\tit('should render the default size language toggle if no size is passed', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioLanguageToggle],\n\t\t\thtml: `<ontario-language-toggle></ontario-language-toggle>`,\n\t\t});\n\n\t\texpect(page.root).toEqualHtml(`\n\t\t\t<ontario-language-toggle>\n\t\t\t\t<mock:shadow-root>\n\t\t\t\t\t<a aria-label=\"Click to switch language to French\" class=\"ontario-language-toggler ontario-language-toggler--default\" href=\"#\">\n\t\t\t\t\t\t<abbr class=\"ontario-show-for-small-only\" title=\"Français\">\n\t\t\t\t\t\t\tFR\n\t\t\t\t\t\t</abbr>\n\t\t\t\t\t\t<span class=\"ontario-show-for-medium\">\n\t\t\t\t\t\t\tFrançais\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t</mock:shadow-root>\n\t\t\t</ontario-language-toggle>\n\t\t`);\n\t\texpect(page.rootInstance.size).toBe('default');\n\t});\n\n\tit('should render a default language of English if no language prop is passed', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioLanguageToggle],\n\t\t\thtml: `<ontario-language-toggle></ontario-language-toggle>`,\n\t\t});\n\n\t\texpect(page.rootInstance.language).toBe('en');\n\t});\n\n\tit('should render a small size language toggle with a French default language when explicitly specified', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioLanguageToggle],\n\t\t\thtml: `<ontario-language-toggle size=\"small\" url=\"/en\" language=\"fr\"></ontario-language-toggle>`,\n\t\t});\n\n\t\texpect(page.root).toEqualHtml(`\n\t\t\t<ontario-language-toggle size=\"small\" url=\"/en\" language=\"fr\">\n\t\t\t\t<mock:shadow-root>\n\t\t\t\t\t<a aria-label=\"Cliquez pour changer de langue en anglais\" class=\"ontario-language-toggler ontario-language-toggler--small\" href=\"/en\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t</mock:shadow-root>\n\t\t\t</ontario-language-toggle>\n\t\t`);\n\t});\n});\n"]}