{"version":3,"file":"ontario-callout.spec.js","sourceRoot":"","sources":["../../../../src/components/ontario-callout/test/ontario-callout.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEpD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAChC,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;gBAC9B,UAAU,EAAE,CAAC,cAAc,CAAC;gBAC5B,IAAI,EAAE,+PAA+P;aACrQ,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE,KAAK,IAAI,EAAE;QACpF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE,6OAA6O;SACnP,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;GAc7B,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4EAA4E,EAAE,KAAK,IAAI,EAAE;QAC3F,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE,uOAAuO;SAC7O,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;GAc7B,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wEAAwE,EAAE,KAAK,IAAI,EAAE;QACvF,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE,uLAAuL;SAC7L,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;GAc7B,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2FAA2F,EAAE,KAAK,IAAI,EAAE;QAC1G,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE,mOAAmO;SACzO,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;GAc7B,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC9B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE,mQAAmQ;SACzQ,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;QAC9E,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CACrC,8FAA8F,CAC9F,CAAC;IACH,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { OntarioCallout } from '../ontario-callout';\n\ndescribe('ontario-callout', () => {\n\tdescribe('snapshot', () => {\n\t\tit('should render the expected html', async () => {\n\t\t\tconst page = await newSpecPage({\n\t\t\t\tcomponents: [OntarioCallout],\n\t\t\t\thtml: `<ontario-callout heading-type=\"h3\" heading-content-type=\"string\" heading-content=\"Get notified\" highlight-colour=\"gold\"><p><a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.</p></ontario-callout>`,\n\t\t\t});\n\n\t\t\texpect(page.root).toMatchSnapshot();\n\t\t});\n\t});\n\n\tit('should render the h2 heading level if no headingType prop is passed', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioCallout],\n\t\t\thtml: `<ontario-callout heading-content-type=\"string\" heading-content=\"Get notified\" highlight-colour=\"gold\"><p><a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.</p></ontario-callout>`,\n\t\t});\n\n\t\texpect(page.root).toEqualHtml(`\n\t\t\t<ontario-callout heading-content-type=\"string\" heading-content=\"Get notified\" highlight-colour=\"gold\">\n\t\t\t\t<mock:shadow-root>\n\t\t\t\t\t<div class=\"ontario-callout ontario-border-highlight--gold\">\n\t\t\t\t\t\t<h2 class=\"ontario-callout__title ontario-h5\">\n\t\t\t\t\t\t\tGet notified\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</mock:shadow-root>\n\t\t\t\t<p>\n\t\t\t\t\t<a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.\n\t\t\t\t</p>\n\t\t\t</ontario-callout>\n\t\t`);\n\t});\n\n\tit('should render the expected heading level when a headingType prop is passed', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioCallout],\n\t\t\thtml: `<ontario-callout heading-type=\"h5\" heading-content-type=\"string\" heading-content=\"Get notified\"><p><a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.</p></ontario-callout>`,\n\t\t});\n\n\t\texpect(page.root).toEqualHtml(`\n\t\t\t<ontario-callout heading-type=\"h5\" heading-content-type=\"string\" heading-content=\"Get notified\">\n\t\t\t\t<mock:shadow-root>\n\t\t\t\t\t<div class=\"ontario-callout ontario-border-highlight--teal\">\n\t\t\t\t\t\t<h5 class=\"ontario-callout__title ontario-h5\">\n\t\t\t\t\t\t\tGet notified\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</mock:shadow-root>\n\t\t\t\t<p>\n\t\t\t\t\t<a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.\n\t\t\t\t</p>\n\t\t\t</ontario-callout>\n\t\t`);\n\t});\n\n\tit('should render a string heading if no headingContentType prop is passed', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioCallout],\n\t\t\thtml: `<ontario-callout heading-content=\"Get notified\"><p><a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.</p></ontario-callout>`,\n\t\t});\n\n\t\texpect(page.root).toEqualHtml(`\n\t\t\t<ontario-callout heading-content=\"Get notified\">\n\t\t\t\t<mock:shadow-root>\n\t\t\t\t\t<div class=\"ontario-callout ontario-border-highlight--teal\">\n\t\t\t\t\t\t<h2 class=\"ontario-callout__title ontario-h5\">\n\t\t\t\t\t\t\tGet notified\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</mock:shadow-root>\n\t\t\t\t<p>\n\t\t\t\t\t<a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.\n\t\t\t\t</p>\n\t\t\t</ontario-callout>\n\t\t`);\n\t});\n\n\tit('should render html in the heading content if the headingContentType prop is set to `html`', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioCallout],\n\t\t\thtml: `<ontario-callout heading-content-type=\"html\" heading-content=\"<a href='#'>Get notified</a>\"><p><a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.</p></ontario-callout>`,\n\t\t});\n\n\t\texpect(page.root).toEqualHtml(`\n\t\t\t<ontario-callout heading-content-type=\"html\" heading-content=\"<a href='#'>Get notified</a>\" heading-content=\"Get notified\">\n\t\t\t\t<mock:shadow-root>\n\t\t\t\t\t<div class=\"ontario-callout ontario-border-highlight--teal\">\n\t\t\t\t\t\t<h2 class=\"ontario-callout__title ontario-h5\">\n\t\t\t\t\t\t\t<a href=\"#\">Get notified</a>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</mock:shadow-root>\n\t\t\t\t<p>\n\t\t\t\t\t<a href=\"#\">Sign up for email reminders</a> and we’ll notify you 60 and 30 days before your licence expires.\n\t\t\t\t</p>\n\t\t\t</ontario-callout>\n\t\t`);\n\t});\n\n\tit('should reflect attributes/props being set', async () => {\n\t\tconst page = await newSpecPage({\n\t\t\tcomponents: [OntarioCallout],\n\t\t\thtml: `<ontario-callout heading-type=\"h4\" heading-content-type=\"html\" heading-content=\"<a href='#'>Get notified</a>\" highlight-colour=\"purple\" content=\"Sign up for email reminders and we'll notify you 60 and 30 days before your licence expires.\"></ontario-callout>`,\n\t\t});\n\n\t\texpect(page.rootInstance.headingType).toBe('h4');\n\t\texpect(page.rootInstance.headingContentType).toBe('html');\n\t\texpect(page.rootInstance.headingContent).toBe(\"<a href='#'>Get notified</a>\");\n\t\texpect(page.rootInstance.highlightColour).toBe('purple');\n\t\texpect(page.rootInstance.content).toBe(\n\t\t\t\"Sign up for email reminders and we'll notify you 60 and 30 days before your licence expires.\",\n\t\t);\n\t});\n});\n"]}