{"version":3,"file":"icon.interface.js","sourceRoot":"","sources":["../../../src/components/ontario-icon/icon.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { IconColour, IconSize } from './icon.types';\n\nexport interface Icon {\n\t/**\n\t * The icon width will autogenerate the height since the icons are in square format, thus preserving\n\t * the aspect ratio.\n\t * Implementation is mandatory in each icon component.\n\t */\n\ticonWidth: IconSize;\n\n\t/**\n\t * Mutable variable, for internal use only.\n\t * Set the icon's width depending on validation result.\n\t * Implementation is mandatory in each icon component.\n\t */\n\ticonWidthState: number;\n\n\t/**\n\t * Validate user input for the `iconWidth` property.\n\t * Implementation in each icon component is mandatory.\n\t */\n\tvalidateWidth: () => void;\n\n\t/**\n\t * Validate the `colour` property for icon components that accept a colour input from users.\n\t * Validate `colour` attribute is not provided for icon components that don't accept the colour input.\n\t * Implementation is mandatory in each icon component.\n\t */\n\tvalidateColour: () => void;\n\n\t/**\n\t * Stencil component lifecycle method that is called once after the component is first connected to the DOM.\n\t * Implementation is mandatory in each icon component.\n\t */\n\tcomponentWillLoad: () => void;\n\n\t/**\n\t * Returns the HTML code to be rendered into a custom element.\n\t * Implementation is mandatory in each icon component.\n\t */\n\trender: () => object;\n}\n\nexport interface IconWithColour extends Icon {\n\t/**\n\t * Set the icon's colour.\n\t * Note that the `keyof typeof` syntax is not necessary to use the enum as a type with StencilJS component.\n\t * Implementation is only mandatory in icon components that accept a colour input from users.\n\t */\n\tcolour: IconColour;\n\n\t/**\n\t * Mutable variable, for internal use only.\n\t * Set the icon's colour based on validation result.\n\t * Implementation is only mandatory in icon components that accept a colour input from users.\n\t */\n\ticonColourState: string;\n}\n"]}