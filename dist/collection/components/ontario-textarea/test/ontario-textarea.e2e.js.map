{"version":3,"file":"ontario-textarea.e2e.js","sourceRoot":"","sources":["../../../../src/components/ontario-textarea/test/ontario-textarea.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('ontario-textarea', () => {\n\tdescribe('render', () => {\n\t\tit('renders', async () => {\n\t\t\tconst page = await newE2EPage();\n\t\t\tawait page.setContent(\"<ontario-textarea name='ontario-textarea' caption='Ontario Textarea'></ontario-textarea>\");\n\t\t\tconst component = await page.find('ontario-textarea');\n\t\t\tconst element = await page.find('ontario-textarea >>> textarea');\n\n\t\t\texpect(component).toHaveClass('hydrated');\n\t\t\texpect(element).toHaveClass('ontario-textarea');\n\t\t\texpect(element).toEqualAttributes({\n\t\t\t\tname: 'ontario-textarea',\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('render changes', () => {\n\t\tlet page: any;\n\t\tlet component: any;\n\t\tlet element: any;\n\n\t\tbeforeEach(async () => {\n\t\t\tpage = await newE2EPage();\n\t\t\tawait page.setContent(\"<ontario-textarea name='ontario-textarea' caption='Ontario Textarea'></ontario-textarea>\");\n\t\t\tcomponent = await page.find('ontario-textarea');\n\t\t\telement = await page.find('ontario-textarea >>> textarea');\n\t\t});\n\n\t\tit('renders changes to the id property', async () => {\n\t\t\tcomponent.setProperty('elementId', 'ontario-textarea-id');\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toEqualAttributes({\n\t\t\t\tname: 'ontario-textarea',\n\t\t\t\tid: 'ontario-textarea-id',\n\t\t\t});\n\t\t});\n\n\t\tit('renders changes to the value attribute', async () => {\n\t\t\tcomponent.setAttribute('value', 'This is a test');\n\t\t\tawait page.waitForChanges();\n\t\t\tconst value = component.getAttribute('value');\n\t\t\texpect(value).toEqual('This is a test');\n\t\t});\n\t});\n});\n\ndescribe('events/methods', () => {\n\tit('fires the inputOnBlur event', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent(\"<ontario-textarea name='ontario-textarea' caption='Ontario Textarea'></ontario-textarea>\");\n\t\tconst blurEvent = await page.spyOnEvent('inputOnBlur');\n\t\tconst component = await page.find('ontario-textarea');\n\n\t\tcomponent.triggerEvent('inputOnBlur');\n\t\tawait page.waitForChanges();\n\t\texpect(blurEvent).toHaveReceivedEventTimes(1);\n\t});\n\n\tit('fires the inputOnFocus event', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent(\"<ontario-textarea name='ontario-textarea' caption='Ontario Textarea'></ontario-textarea>\");\n\t\tconst focusEvent = await page.spyOnEvent('inputOnFocus');\n\t\tconst component = await page.find('ontario-textarea');\n\n\t\tcomponent.triggerEvent('inputOnFocus');\n\t\tawait page.waitForChanges();\n\t\texpect(focusEvent).toHaveReceivedEventTimes(1);\n\t});\n\n\tit('fires the inputOnChange event', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent(\"<ontario-textarea name='ontario-textarea' caption='Ontario Textarea'></ontario-textarea>\");\n\t\tconst changeEvent = await page.spyOnEvent('inputOnChange');\n\t\tconst component = await page.find('ontario-textarea');\n\n\t\tcomponent.triggerEvent('inputOnChange');\n\t\tawait page.waitForChanges();\n\t\texpect(changeEvent).toHaveReceivedEventTimes(1);\n\t});\n\n\tit('fires the onChange event', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent(\"<ontario-textarea name='ontario-textarea' caption='Ontario Textarea'></ontario-textarea>\");\n\t\tconst changeEvent = await page.spyOnEvent('change');\n\t\tconst component = await page.find('ontario-textarea');\n\n\t\tcomponent.triggerEvent('change');\n\t\tawait page.waitForChanges();\n\t\texpect(changeEvent).toHaveReceivedEventTimes(1);\n\t});\n});\n"]}