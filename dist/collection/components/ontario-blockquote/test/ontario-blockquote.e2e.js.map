{"version":3,"file":"ontario-blockquote.e2e.js","sourceRoot":"","sources":["../../../../src/components/ontario-blockquote/test/ontario-blockquote.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('ontario-blockquote', () => {\n\tit('renders', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent('<ontario-blockquote></ontario-blockquote>');\n\t\tconst component = await page.find('ontario-blockquote');\n\t\tconst element = await page.find('ontario-blockquote >>> blockquote');\n\n\t\texpect(component).toHaveClass('hydrated');\n\t\texpect(element).toHaveClass('ontario-blockquote');\n\t});\n\n\tdescribe('render changes', () => {\n\t\tlet page: any;\n\t\tlet component: any;\n\t\tlet element: any;\n\n\t\tbeforeEach(async () => {\n\t\t\tpage = await newE2EPage();\n\t\t\tawait page.setContent('<ontario-blockquote></ontario-blockquote>');\n\t\t\tcomponent = await page.find('ontario-blockquote');\n\t\t\telement = await page.find('ontario-blockquote >>> blockquote');\n\t\t});\n\n\t\tit('renders changes to the quote property', async () => {\n\t\t\tcomponent.setProperty('quote', 'This is the quote');\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toHaveClasses(['ontario-blockquote', 'ontario-blockquote--short']);\n\t\t\texpect(element.textContent).toContain('This is the quote');\n\n\t\t\t// set a longer quote and test that the short class does not exist\n\t\t\tcomponent.setProperty(\n\t\t\t\t'quote',\n\t\t\t\t'When one door closes, another opens; but we often look so long and so regretfully upon the closed door that we do not see the one that has opened for us.',\n\t\t\t);\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toHaveClass('ontario-blockquote');\n\t\t\texpect(element).not.toHaveClass('ontario-blockquote--short');\n\t\t});\n\n\t\tit('renders changes to the attribution property', async () => {\n\t\t\tcomponent.setProperty('attribution', 'Homer Simpson');\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toHaveClass('ontario-blockquote');\n\t\t\texpect(element.textContent).toContain('Homer Simpson');\n\t\t});\n\n\t\tit('renders changes to the byline property', async () => {\n\t\t\tcomponent.setProperty('byline', 'Ontario Digital Service');\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toHaveClass('ontario-blockquote');\n\t\t\texpect(element.textContent).toContain('Ontario Digital Service');\n\t\t});\n\t});\n\n\tdescribe('render CSS classes', () => {\n\t\tlet page: any;\n\t\tlet component: any;\n\t\tlet element: any;\n\n\t\tbeforeEach(async () => {\n\t\t\tpage = await newE2EPage();\n\t\t\tawait page.setContent('<ontario-blockquote></ontario-blockquote>');\n\t\t\tcomponent = await page.find('ontario-blockquote');\n\t\t\telement = await page.find('ontario-blockquote >>> blockquote');\n\t\t});\n\n\t\tit('should render only the `ontario-blockquote` class when the count of the quote prop is over 140 characters', async () => {\n\t\t\tcomponent.setProperty(\n\t\t\t\t'quote',\n\t\t\t\t'I saw this movie about a bus that had to speed around a city, keeping its speed over fifty, and if its speed dropped, it would explode! I think it was called, \"The Bus That Couldnâ€™t Slow Down\".',\n\t\t\t);\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toHaveClasses(['ontario-blockquote']);\n\t\t});\n\n\t\tit('should render both the `ontario-blockquote` and `ontario-blockquote--short` classes when the count of the quote prop is under 140 characters', async () => {\n\t\t\tcomponent.setProperty('quote', 'This is an example of a short quote');\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toHaveClasses(['ontario-blockquote', 'ontario-blockquote--short']);\n\t\t});\n\t});\n});\n"]}