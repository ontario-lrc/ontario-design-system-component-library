{"version":3,"file":"ontario-dropdown-list.e2e.js","sourceRoot":"","sources":["../../../../src/components/ontario-dropdown-list/test/ontario-dropdown-list.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACtC,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,iDAAiD,CAAC,CAAC;QACzE,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC3D,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QAEpE,MAAM,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC/B,IAAI,IAAS,CAAC;QACd,IAAI,SAAc,CAAC;QACnB,IAAI,OAAY,CAAC;QAEjB,UAAU,CAAC,KAAK,IAAI,EAAE;YACrB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;YAC1B,MAAM,IAAI,CAAC,UAAU,CACpB;;;;;;8BAM0B,CAC1B,CAAC;YACF,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACrD,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACrD,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,uBAAuB,CAAC,CAAC;YACvD,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC;gBACjC,IAAI,EAAE,uBAAuB;aAC7B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACvB,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,iDAAiD,CAAC,CAAC;QACzE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACpD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAE3D,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,WAAW,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('ontario-dropdown-list', () => {\n\tit('renders dropdown-list', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent('<ontario-dropdown-list></ontario-dropdown-list>');\n\t\tconst component = await page.find('ontario-dropdown-list');\n\t\tconst element = await page.find('ontario-dropdown-list >>> select');\n\n\t\texpect(component).toHaveClass('hydrated');\n\t\texpect(element).toHaveClasses(['ontario-input', 'ontario-dropdown']);\n\t});\n\n\tdescribe('render changes', () => {\n\t\tlet page: any;\n\t\tlet component: any;\n\t\tlet element: any;\n\n\t\tbeforeEach(async () => {\n\t\t\tpage = await newE2EPage();\n\t\t\tawait page.setContent(\n\t\t\t\t`<ontario-dropdown-list\n                  name=\"dropdown-options\"\n                  element-id=\"dropdown-list\",\n                  is-empty-start-option=\"Please select\"\n                  caption='{\"captionText\": \"Label\"}'\n\t\t\t\t  options='[{ \"value\": \"dropdown-option-1\", \"label\": \"Option 1\" }]'\n\t\t\t\t></ontario-dropdown-list>`,\n\t\t\t);\n\t\t\tcomponent = await page.find('ontario-dropdown-list');\n\t\t\telement = await page.find('ontario-dropdown-list >>> select');\n\t\t});\n\n\t\tit('renders changes to the name property', async () => {\n\t\t\tcomponent.setProperty('name', 'ontario-dropdown-name');\n\t\t\tawait page.waitForChanges();\n\t\t\texpect(element).toEqualAttributes({\n\t\t\t\tname: 'ontario-dropdown-name',\n\t\t\t});\n\t\t});\n\t});\n});\n\ndescribe('events', () => {\n\tit('fires the onChange event', async () => {\n\t\tconst page = await newE2EPage();\n\t\tawait page.setContent('<ontario-dropdown-list></ontario-dropdown-list>');\n\t\tconst changeEvent = await page.spyOnEvent('change');\n\t\tconst component = await page.find('ontario-dropdown-list');\n\n\t\tcomponent.triggerEvent('change');\n\t\tawait page.waitForChanges();\n\t\texpect(changeEvent).toHaveReceivedEventTimes(1);\n\t});\n});\n"]}