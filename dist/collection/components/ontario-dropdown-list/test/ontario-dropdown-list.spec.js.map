{"version":3,"file":"ontario-dropdown-list.spec.js","sourceRoot":"","sources":["../../../../src/components/ontario-dropdown-list/test/ontario-dropdown-list.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACtC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;YACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;gBAC9B,UAAU,EAAE,CAAC,mBAAmB,CAAC;gBACjC,IAAI,EAAE,8IAA8I;aACpJ,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;IAe7B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;gBAC9B,UAAU,EAAE,CAAC,mBAAmB,CAAC;gBACjC,IAAI,EAAE;;;;;;8BAMoB;aAC1B,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACxD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACnE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,yDAAyD,CAAC,CAAC;QACnG,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { OntarioDropdownList } from '../ontario-dropdown-list';\n\ndescribe('ontario-dropdown-list', () => {\n\tdescribe('render', () => {\n\t\tit('should render a dropdown list element', async () => {\n\t\t\tconst page = await newSpecPage({\n\t\t\t\tcomponents: [OntarioDropdownList],\n\t\t\t\thtml: `<ontario-dropdown-list element-id=\"dropdown-list\" options='[{ \"value\": \"dropdown-option-1\", \"label\": \"Option 1\" }]'></ontario-dropdown-list>`,\n\t\t\t});\n\t\t\texpect(page.root).toEqualHtml(`\n\t\t\t\t<ontario-dropdown-list element-id=\"dropdown-list\" options='[{ \"value\": \"dropdown-option-1\", \"label\": \"Option 1\" }]'>\n\t\t\t\t<mock:shadow-root>\n\t\t\t\t\t<div class=\"ontario-form-group\">\n\t\t\t\t\t\t<label class=\"ontario-label\" htmlfor=\"dropdown-list\">\n\t\t\t\t\t\t\t<span class=\"ontario-label__flag\">\n\t\t\t\t\t\t\t(optional)\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<select class=\"ontario-dropdown ontario-input\" id=\"dropdown-list\" style=\"background-image: url(/assets/ontario-material-dropdown-arrow-48px.svg);\">\n\t\t\t\t\t\t\t<option value=\"dropdown-option-1\">Option 1</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</mock:shadow-root>\n\t\t\t\t</ontario-dropdown-list>\n\t\t\t`);\n\t\t});\n\n\t\tit('should reflect attributes/props being set', async () => {\n\t\t\tconst page = await newSpecPage({\n\t\t\t\tcomponents: [OntarioDropdownList],\n\t\t\t\thtml: `<ontario-dropdown-list\n                  name=\"dropdown-options\"\n                  element-id=\"dropdown-list\",\n                  is-empty-start-option=\"Please select\"\n                  caption='{\"captionText\": \"Label\"}'\n\t\t\t\t  options='[{ \"value\": \"dropdown-option-1\", \"label\": \"Option 1\" }]'\n\t\t\t\t></ontario-dropdown-list>`,\n\t\t\t});\n\n\t\t\texpect(page.rootInstance.name).toBe('dropdown-options');\n\t\t\texpect(page.rootInstance.elementId).toBe('dropdown-list');\n\t\t\texpect(page.rootInstance.isEmptyStartOption).toBe('Please select');\n\t\t\texpect(page.rootInstance.captionState.captionText).toBe('Label');\n\t\t\texpect(page.rootInstance.options).toBe('[{ \"value\": \"dropdown-option-1\", \"label\": \"Option 1\" }]');\n\t\t});\n\t});\n});\n"]}