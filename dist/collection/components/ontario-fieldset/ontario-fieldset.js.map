{"version":3,"file":"ontario-fieldset.js","sourceRoot":"","sources":["../../../src/components/ontario-fieldset/ontario-fieldset.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAI1D,OAAO,EAAe,YAAY,EAAE,MAAM,sDAAsD,CAAC;AACjG,OAAO,EAAE,mBAAmB,EAAE,MAAM,6CAA6C,CAAC;AAClF,OAAO,EAAE,kBAAkB,EAAE,yBAAyB,EAAE,MAAM,6CAA6C,CAAC;AAO5G,MAAM,OAAO,eAAe;;;0BASwB,SAAS;;IAE5D;;;OAGG;IAEH,kBAAkB;QACjB,MAAM,OAAO,GAAG,yBAAyB,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAEzE,IAAI,OAAO,EAAE,CAAC;YACb,OAAO,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;aAAM,CAAC;YACP,MAAM,OAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;YAC1C,OAAO;iBACL,kBAAkB,EAAE;iBACpB,gBAAgB,CAAC,eAAe,IAAI,CAAC,UAAU,GAAG,CAAC;iBACnD,cAAc,CAAC,KAAK,CAAC;iBACrB,gBAAgB,CAAC,sBAAsB,CAAC;iBACxC,cAAc,CAAC,sDAAsD,CAAC;iBACtE,YAAY,EAAE,CAAC;YAEjB,OAAO,SAAS,CAAC;QAClB,CAAC;IACF,CAAC;IAED;;OAEG;IAEH,cAAc;QACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,QAAgB;QAClC,IAAI,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC;YAClC,MAAM,OAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;YAC1C,OAAO;iBACL,kBAAkB,EAAE;iBACpB,gBAAgB,CAAC,UAAU,CAAC;iBAC5B,cAAc,CAAC,KAAK,CAAC;iBACrB,gBAAgB,CAAC,sBAAsB,CAAC;iBACxC,cAAc,CAAC,kBAAkB,CAAC;iBAClC,YAAY,EAAE,CAAC;QAClB,CAAC;IACF,CAAC;IACD,iBAAiB;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAEO,QAAQ;QACf,QAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;YACzB,KAAK,OAAO;gBACX,OAAO,0DAA0D,CAAC;YACnE,KAAK,SAAS;gBACb,OAAO,4DAA4D,CAAC;YACrE,KAAK,SAAS,CAAC;YACf;gBACC,OAAO,0BAA0B,CAAC;QACpC,CAAC;IACF,CAAC;IAED,MAAM;QACL,OAAO,CACN,4DAAK,KAAK,EAAC,oBAAoB;YAC9B,iEAAU,KAAK,EAAC,kBAAkB;gBACjC,+DAAQ,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAC5B,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,cAAK,IAAI,CAAC,MAAM,CAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAC7D;gBACT,8DAAQ,CACE,CACN,CACN,CAAC;IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACD","sourcesContent":["import { Component, h, Prop, Watch } from '@stencil/core';\n\nimport { Fieldset } from './ontario-fieldset.interface';\n\nimport { CaptionType, CaptionTypes } from '../../utils/common/input-caption/input-caption.types';\nimport { ConsoleMessageClass } from '../../utils/console-message/console-message';\nimport { validatePropExists, validateValueAgainstArray } from '../../utils/validation/validation-functions';\n\n@Component({\n\ttag: 'ontario-fieldset',\n\tstyleUrl: 'ontario-fieldset.scss',\n\tshadow: true,\n})\nexport class OntarioFieldset implements Fieldset {\n\t/**\n\t * The text value used for the legend of the fieldset.\n\t */\n\t@Prop({ mutable: true }) legend: string;\n\n\t/**\n\t * The size of the fieldset legend. If no prop is passed, it will be `default`.\n\t */\n\t@Prop({ mutable: true }) legendSize: CaptionType = 'default';\n\n\t/**\n\t * Watch for changes to the legendSize prop.\n\t * This is for validation purposes to make sure the legendSize matches one of the CaptionTypes.\n\t */\n\t@Watch('legendSize')\n\tvalidateLegendSize() {\n\t\tconst isValid = validateValueAgainstArray(this.legendSize, CaptionTypes);\n\n\t\tif (isValid) {\n\t\t\treturn this.legendSize;\n\t\t} else {\n\t\t\tconst message = new ConsoleMessageClass();\n\t\t\tmessage\n\t\t\t\t.addDesignSystemTag()\n\t\t\t\t.addMonospaceText(` legendSize ${this.legendSize} `)\n\t\t\t\t.addRegularText('for')\n\t\t\t\t.addMonospaceText(' <ontario-fieldset> ')\n\t\t\t\t.addRegularText('is not a valid type. A default size will be applied.')\n\t\t\t\t.printMessage();\n\n\t\t\treturn 'default';\n\t\t}\n\t}\n\n\t/*\n\t * Watch for changes in the `legend` prop for validation purposes.\n\t */\n\t@Watch('legend')\n\tvalidateLegend() {\n\t\tthis.validateLegendText(this.legend);\n\t}\n\n\t/**\n\t * Print the legend warning message\n\t */\n\tvalidateLegendText(newValue: string) {\n\t\tif (validatePropExists(newValue)) {\n\t\t\tconst message = new ConsoleMessageClass();\n\t\t\tmessage\n\t\t\t\t.addDesignSystemTag()\n\t\t\t\t.addMonospaceText(' legend ')\n\t\t\t\t.addRegularText('for')\n\t\t\t\t.addMonospaceText(' <ontario-fieldset> ')\n\t\t\t\t.addRegularText('was not provided')\n\t\t\t\t.printMessage();\n\t\t}\n\t}\n\tcomponentWillLoad() {\n\t\tthis.validateLegend();\n\t\tthis.validateLegendSize();\n\t}\n\n\tprivate getClass() {\n\t\tswitch (this.legendSize) {\n\t\t\tcase 'large':\n\t\t\t\treturn `ontario-fieldset__legend ontario-fieldset__legend--large`;\n\t\t\tcase 'heading':\n\t\t\t\treturn `ontario-fieldset__legend ontario-fieldset__legend--heading`;\n\t\t\tcase 'default':\n\t\t\tdefault:\n\t\t\t\treturn `ontario-fieldset__legend`;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"ontario-form-group\">\n\t\t\t\t<fieldset class=\"ontario-fieldset\">\n\t\t\t\t\t<legend class={this.getClass()}>\n\t\t\t\t\t\t{this.legendSize === 'heading' ? <h1>{this.legend}</h1> : this.legend}\n\t\t\t\t\t</legend>\n\t\t\t\t\t<slot />\n\t\t\t\t</fieldset>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}